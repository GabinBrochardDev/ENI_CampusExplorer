{% extends 'base.html.twig' %}

{% block title %}Ajouter un utilisateur{% endblock %}

{% block body %}
    <h1 class="text-3xl font-bold mb-6 text-center text-gray-800 my-12">Ajouter un utilisateur</h1>

    <!-- Conteneur de formulaire avec espacement avant le footer -->
    <div class="max-w-lg mx-auto bg-white p-8 rounded-lg shadow-lg mb-24 space-y-6">

        <!-- Début du formulaire -->
        {{ form_start(form, { 'attr': { 'class': 'space-y-6' } }) }}

        <!-- Informations utilisateur -->
        <div class="space-y-6">
            <h2 class="text-xl font-semibold mb-4 text-gray-800 text-center">Informations utilisateur</h2>

            <!-- Champs Nom -->
            <div>
                {{ form_row(form.nom, { 'attr': { 'class': 'w-full p-3 rounded-md border border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-300 focus:outline-none transition duration-300', 'placeholder': 'Nom' } }) }}
            </div>

            <!-- Champs Prénom -->
            <div>
                {{ form_row(form.prenom, { 'attr': { 'class': 'w-full p-3 rounded-md border border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-300 focus:outline-none transition duration-300', 'placeholder': 'Prénom' } }) }}
            </div>

            <!-- Champs Pseudo -->
            <div>
                {{ form_row(form.pseudo, { 'attr': { 'class': 'w-full p-3 rounded-md border border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-300 focus:outline-none transition duration-300', 'placeholder': 'Pseudo' } }) }}
            </div>

            <!-- Champs Email -->
            <div>
                {{ form_row(form.email, { 'attr': { 'class': 'w-full p-3 rounded-md border border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-300 focus:outline-none transition duration-300', 'placeholder': 'Email' } }) }}
            </div>

            <!-- Champs Mot de passe -->
            <div>
                {{ form_row(passwordForm.newPassword, { 'attr': { 'class': 'w-full p-3 rounded-md border border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-300 focus:outline-none transition duration-300', 'placeholder': 'Mot de passe' } }) }}
            </div>

            <!-- Champs Téléphone -->
            <div>
                {{ form_row(form.telephone, { 'attr': { 'class': 'w-full p-3 rounded-md border border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-300 focus:outline-none transition duration-300', 'placeholder': 'Téléphone' } }) }}
            </div>

            <!-- Champs Campus -->
            <div>
                {{ form_row(form.campus, { 'attr': { 'class': 'w-full p-3 rounded-md border border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-300 focus:outline-none transition duration-300' } }) }}
            </div>

            <!-- Champs Actif (Switch personnalisé) -->
            <div class="flex flex-col items-center mb-4">
                <label for="form_isActive" class="block text-sm font-medium text-gray-900 text-center"> Actif </label>
                <div class="relative mt-2">
                    <label class="inline-flex items-center cursor-pointer">
                        {{ form_widget(form.isActive, { 'attr': { 'class': 'sr-only peer' } }) }} 
                        <div class="w-9 h-5 bg-gray-200 rounded-full peer peer-checked:bg-[#2C2C2C] peer-focus:ring-4 peer-focus:ring-gray-300 transition-colors"></div>
                        <div class="dot absolute left-1 top-0.5 bg-white w-4 h-4 rounded-full transition peer-checked:translate-x-full"></div>
                    </label>
                </div>
            </div>

            <!-- Champs Administrateur (Switch personnalisé) -->
            <div class="flex flex-col items-center mb-4">
                <label for="form_isAdmin" class="block text-sm font-medium text-gray-900 text-center"> Administrateur </label>
                <div class="relative mt-2">
                    <label class="inline-flex items-center cursor-pointer">
                        {{ form_widget(form.isAdmin, { 'attr': { 'class': 'sr-only peer' } }) }} 
                        <div class="w-9 h-5 bg-gray-200 rounded-full peer peer-checked:bg-[#2C2C2C] peer-focus:ring-4 peer-focus:ring-gray-300 transition-colors"></div>
                        <div class="dot absolute left-1 top-0.5 bg-white w-4 h-4 rounded-full transition peer-checked:translate-x-full"></div>
                    </label>
                </div>
            </div>

    

  <div class="mb-6">
    <div class="mb-4 flex flex-col items-center justify-center">
        <div>
            {% if participant.photo %}
                <p id="no-photo-text" style="display: none;">Il n'y a pas encore de photo de profil.</p>
                <p>Photo actuelle :</p>
                <img src="{{ asset('uploads/profile_photos/' ~ participant.photo) }}" alt="Photo de profil" class="w-32 h-32 rounded-full">
            {% else %}
                <p id="no-photo-text">Il n'y a pas encore de photo de profil.</p>
            {% endif %}
        </div>

        <div class="flex justify-center items-center">
            <p id="new-photo-label" style="display: none;" class="text-center">Nouvelle photo :</p>
            <img id="preview-image" class="mb-2 h-32 w-32 rounded-full object-cover" style="display: none;" alt="Aperçu de la nouvelle photo">
        </div>
    </div>

    <div>
        {{ form_row(form.photo, {'attr': {'class': 'border border-gray-300 rounded-md p-2 w-full'}}) }}
    </div>
</div>


            <!-- Bouton Ajouter -->
            <div class="text-center">
                <button type="submit" class="w-2/3 bg-[#2C2C2C] text-white px-6 py-3 rounded-md shadow-md hover:bg-gray-800 focus:outline-none focus:ring focus:ring-gray-300 transition duration-300">
                    Ajouter l'utilisateur
                </button>
            </div>
   {{ form_end(form) }}
            <!-- JavaScript pour prévisualiser la nouvelle photo et afficher le nom du fichier -->
            <script>
document.addEventListener('DOMContentLoaded', function () {
    const photoInput = document.querySelector('input[type="file"]');
    const previewImage = document.getElementById('preview-image');
    const newPhotoLabel = document.getElementById('new-photo-label');
    const noPhotoText = document.getElementById('no-photo-text');

    if (photoInput) {
        photoInput.addEventListener('change', function (event) {
            const file = event.target.files[0];

            if (file) {
                const reader = new FileReader();

                reader.onload = function(e) {
                    previewImage.src = e.target.result;
                    previewImage.style.display = 'block'; // Afficher l'image prévisualisée
                    newPhotoLabel.style.display = 'block'; // Afficher le label "Nouvelle photo"
                    if (noPhotoText) noPhotoText.style.display = 'none'; // Masquer le texte "Il n'y a pas encore de photo"
                };

                reader.readAsDataURL(file); // Lire le fichier comme URL
            } else {
                previewImage.style.display = 'none'; // Masquer l'image si aucun fichier n'est sélectionné
                newPhotoLabel.style.display = 'none'; // Masquer le label si aucun fichier n'est sélectionné
                if (noPhotoText) noPhotoText.style.display = 'block'; // Remettre le texte si aucune photo n'est sélectionnée
            }
        });
    }
});



            </script>
        </div>
    </div>

{% endblock %}
